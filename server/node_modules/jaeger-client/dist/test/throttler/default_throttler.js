'use strict';

var _chai = require('chai');

var _default_throttler = require('../../src/throttler/default_throttler');

var _default_throttler2 = _interopRequireDefault(_default_throttler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

describe('DefaultThrottler should', function () {
  it('throttle everything', function () {
    var throttler = new _default_throttler2.default(true);
    throttler.setProcess({});
    _chai.assert.isNotOk(throttler.isAllowed('key'));
    throttler.close();
  });

  it('throttle nothing', function (done) {
    var throttler = new _default_throttler2.default();
    throttler.setProcess({});
    _chai.assert.isOk(throttler.isAllowed('key'));
    throttler.close(done);
  });
});
//# sourceMappingURL=default_throttler.js.map